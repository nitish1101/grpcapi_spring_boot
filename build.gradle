plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.google.protobuf" version "0.9.2"
}


group = 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.google.protobuf:protobuf-java:3.22.2'
	implementation group: 'net.devh', name: 'grpc-spring-boot-starter', version: '2.14.0.RELEASE'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation group: 'io.grpc', name: 'grpc-stub', version: '1.54.0'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.22.2"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.42.0'
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
		}
	}
}

sourceSets {
	main {
		proto {
			// In addition to the default 'src/main/proto'
			srcDir 'src/main/resources/proto'
			// In addition to the default '**/*.proto' (use with caution).
			// Using an extension other than 'proto' is NOT recommended,
			// because when proto files are published along with class files, we can
			// only tell the type of a file from its extensions
		}
		java {
			srcDir 'src/main/java'
		}
	}
	test {
		proto {
			srcDir 'src/test/proto'
		}
	}
}



tasks.named('test') {
	useJUnitPlatform()
}
